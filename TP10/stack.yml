version: "3.9"
services:
  db:
    image: guignome54/woody_database:latest
    environment:
      - MYSQL_DATABASE=woody
      - MYSQL_ROOT_PASSWORD=pass
    volumes:
      - db-data:/var/lib/mysql
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
  redis:
    image: redis:alpine
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
  rabbitmq:
    image: rabbitmq:3-management
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
      - default
  product_service:
    image: guignome54/woody_product:latest
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
  order_service:
    image: guignome54/woody_order:latest
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
    depends_on:
      - redis
      - db
      - rabbitmq
    networks:
      - default
  order_worker:
    image: guignome54/woody_order_worker:latest
    deploy:
      replicas: 4
      restart_policy:
        condition: on-failure
    depends_on:
      - db
      - rabbitmq
    restart: always
    networks:
      - default
  misc_service:
    image: guignome54/woody_misc:latest
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
  front:
    image: guignome54/woody_front:latest
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
  reverse:
    image: guignome54/woody_rp:latest
    ports:
      - "80:8080"
    volumes:
      - ./reverse-proxy/default.conf:/etc/nginx/conf.d/default.conf
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
    depends_on:
      - front
      - product_service
      - order_service
      - misc_service
    networks:
      - default
networks:
  default:
    driver: overlay
volumes:
  db-data:
  rabbitmq-data: